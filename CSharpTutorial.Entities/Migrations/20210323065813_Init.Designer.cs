// <auto-generated />
using System;
using CSharpTutorial.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharpTutorial.Entities.Migrations
{
    [DbContext(typeof(TutorialContext))]
    [Migration("20210323065813_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharpTutorial.Entities.Models.CarCompany", b =>
                {
                    b.Property<Guid>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CarCompanyName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("PersonEntityID")
                        .HasColumnType("char(36)");

                    b.HasKey("CarID");

                    b.HasIndex("PersonEntityID");

                    b.ToTable("CarCompany");
                });

            modelBuilder.Entity("CSharpTutorial.Entities.Models.FoodCompany", b =>
                {
                    b.Property<Guid>("FoodCompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FoodCompanyName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FoodCompanyID");

                    b.ToTable("FoodComapny");
                });

            modelBuilder.Entity("CSharpTutorial.Entities.Models.PersonEntity", b =>
                {
                    b.Property<Guid>("PersonEntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PersonEntityID");

                    b.ToTable("PersonEntity");
                });

            modelBuilder.Entity("CSharpTutorial.Entities.Models.CarCompany", b =>
                {
                    b.HasOne("CSharpTutorial.Entities.Models.PersonEntity", "PersonEntity")
                        .WithMany()
                        .HasForeignKey("PersonEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
